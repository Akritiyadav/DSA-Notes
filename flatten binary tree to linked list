class Solution
{
    public:
    void flatten(Node *root)
    {
        if (!root || (!root->left && !root->right))

            return;

    

        if (root->left)

        {

            flatten(root->left);

    

            Node *temp = root->right;

            root->right = root->left;

            root->left = NULL;

    

            Node *t = root->right;

            while (t->right)

                t = t->right;

            t->right = temp;

        }

        flatten(root->right);
        //code here
    }
};

                  or 
                  class Solution {
  public:
  TreeNode * prev = NULL;
    void flatten(TreeNode * root) {
      if (root == NULL) return;

      flatten(root -> right);
      flatten(root -> left);

      root -> right = prev;
      root -> left = NULL;
      prev = root;
    }

};
