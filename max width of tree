      1
     /    \
    2      3
Output: 2
On the first level there is only
one node 1
On the second level there are
two nodes 2, 3 clearly it is the 
maximum number of nodes at any level

//Solution
 int getMaxWidth(Node* root) {
int ans = 0;                        
        if(!root) return ans;
        queue<Node*>q;
        q.push(root);
        while(!q.empty()){

            int sz = q.size();
            ans = (sz > ans) ? sz : ans;
            while(sz--){
                Node* temp = q.front();
                q.pop();
                if(temp->left != nullptr) q.push(temp->left);
                if(temp->right != nullptr) q.push(temp->right);
            }
        }
        return ans;
        // Your code here
    }
